{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"docs/about/","title":"About","text":"<p>This page contains education topics which cover following:</p> <ul> <li>Working with terminal and editors</li> <li>(in progress) Ability to setup your own custom,dedicated envorinment for tests</li> <li> <p>(todo) Configure linux servers via automation tools like:</p> <ul> <li>Ansible</li> <li>Terraform </li> </ul> </li> <li> <p>(todo) Manage ansible playbooks from UI (User interface)</p> </li> <li>(todo) Working with code version control (Git)</li> <li> <p>(todo) Working with public Clouds:</p> <ul> <li>AWS</li> <li>Azure</li> </ul> </li> </ul>"},{"location":"docs/plan/","title":"Education plan","text":"<p>Step 1. Read Base article about Terminals and  Editors</p> <p>Step 2. Do Lab about using VI editor</p> <p>Step 3. Read Base article about Virtualization concept</p> <p>Step 4. Do Lab about using Parallels for VMs Management</p> <p>Step 5. Read Base article about SSH</p>"},{"location":"docs/Base/ssh/","title":"SSH - Remote access","text":"<p>ssh is a tool which allows to connect to remote laptop/server.</p> <p>Usually all laptops/servers on linux/MacOs have such tool.</p>"},{"location":"docs/Base/ssh/#access-with-loginpassword","title":"Access with login/password","text":"<p>Below is syntax of using</p> <pre><code>ssh &lt;user&gt;@&lt;server_name or ip&gt;\n</code></pre> <p>Example:</p> <p>if we want to connect to server with ip 10.211.55.9 with user user1</p> <pre><code>ssh user1@10.211.55.9\n</code></pre> <p>Terminal asks password for user1 to allow access to 10.211.55.9</p> <p>Once you enter correct password for user1 you will be able to login to 10.211.55.9 server.</p>"},{"location":"docs/Base/ssh/#passwordless-access","title":"Passwordless access","text":"<p>In automation world, scripts sometimes are required to connect to remote servers for running some commands and it is unacceptable to enter password manually each time when your script tries to connect to remote server.</p> <p>For such scenario where we need to get access to remote server without password we need to create special ssh key which we can use as atrust proof for remote server.</p> <p>Step 1. Create new ssh key.</p> <p>We use toolwith name ssh-keygen which generates two keys.</p> <ul> <li>Public key - we copy such key to remote server</li> <li>Private key - out personal key which we will use to remote connect to server with preinstalled our public key</li> </ul> Note <p>Public key is always assosiate only with one single private key. Pair public/private keys  is uniq. We can create many public/private keys but specific public key always belong to their private key which is generated at the same time.</p> <pre><code>ssh-keygen\n</code></pre> <p>Press Enter on all questions. it will create private/public key pair in default place</p> <p></p> <p>Step 2. Locate your keys</p> <pre><code>ls -l ~/.ssh/\n</code></pre> <ul> <li>id_rsa - is private ssh key</li> <li>id_rsa.pub - is public ssh key</li> </ul> <p>Step 3. Use ssh keys for passwordless remote connection</p> <p>For using such key we need to add our public ssh key to remote host</p> <p><pre><code>ssh-copy-id -i ~/.ssh/id_rsa.pub user1@10.211.55.9\n</code></pre> Enter password</p> <p></p> <p>Login to remote host with using our own ssh private key</p> <p>ssh -i ~/.ssh/id_rsa user1@10.211.55.9</p>"},{"location":"docs/Base/ssh/#execute-remote-command-via-ssh-on-remote-host","title":"Execute remote command via ssh on remote host","text":"<p>ssh tool allows us to run command on remote host as well as just login to one</p> <pre><code>Syntax: ssh -i &lt;private_key&gt; &lt;user&gt;@&lt;host&gt; &lt;command&gt;\n</code></pre> <p>Example:</p> <pre><code>ssh -i ~/.ssh/id_rsa user1@10.211.55.9 date\n</code></pre> <p>Such command run command date which shows time and date on remote server.</p> <p></p>"},{"location":"docs/Base/terminals/","title":"Terminals and Editors","text":""},{"location":"docs/Base/terminals/#terminals","title":"Terminals","text":"<p>In Linux world(MacOS as well) there is only one main terminal. It is command line interface.</p> <p></p> <p>In MacOS(name of Operation system for Macbook) terminal application can be found in \"Application\" folder or in bottom panel of icons</p> <p></p>"},{"location":"docs/Base/terminals/#there-are-several-editors","title":"There are several editors","text":"<p>They are allow to edit content of files in Linux/MacOS like notepad. All editors below work only with plain text format(simple text, no formatting like in Word). </p> <ul> <li>vi (vim)</li> <li>nano</li> <li>gedit (grafical editor)</li> </ul>"},{"location":"docs/Base/terminals/#vivim","title":"VI(VIM)","text":"<p>Vi is a  main and the  most popular editor which is available in every linux like operation system.</p> <p>Usage example:</p> <p>Step 1. create new text file(testfile.txt) and start editing</p> <p>From terminal execute:</p> <pre><code>vi testfile.txt\n</code></pre> <p>and Tap  <p>Step 2. Tap ESC + i to start modifing the file</p> <p>VI restrictions</p> <p>Editor supports cursor moving(array buttons) and erasing charachers(delete button) But vi doesnt support mouse cursor moving like in Word</p> <p>When you tap ESC + i you will see status of editor in a bottom of a vi screen Like this (-- INSERT --) line</p> <p></p> <p>If you don't see such status, check the keyboard language(must be eng)</p> <p>Step 3. To exit from editor Tap ESC + :wq and  <p>Step 4. To show content of any text file use cat linux command</p> <pre><code>cat testfile.txt\n</code></pre> <p>VIM is enchanced version of vi editor(same hot keys) and highlight syntax like this</p> <p></p>"},{"location":"docs/Base/terminals/#nano","title":"Nano","text":"<p>Nano is second popular editor and doesnt require to be learnt</p>"},{"location":"docs/Base/terminals/#gedit","title":"Gedit","text":"<p>Gedit is grafical editor and can be used only if Linux server has grafical interface(where we can use mouse cursor and icons in Desktop).</p> <p>All Linux servers don't have Grafical interface(because it consumes resources). All admins use only temninal mode in linux.</p>"},{"location":"docs/Base/terminals/#useful-links","title":"Useful Links","text":"<ul> <li>Vi editor hot keys</li> <li>Russian article about vi</li> </ul>"},{"location":"docs/Base/vagrant/","title":"Virtualization concept","text":"<p>This page is described how to install, configure and use vagrant tool</p> <p>Vagrant is a tool which help to install (VM)Virtual Machine(it is isolated operation system(linux or windows) in your laptop or server or public clouds. </p>"},{"location":"docs/Base/vagrant/#virtual-machine-conceptvm","title":"Virtual Machine concept(VM)","text":"<p>During Virtual machine creating we have to specify how much resources will be allocated from server(or your laptop) to such VM.</p> <p>Below is main resources which we define for vitrual machine</p> <ul> <li>CPU (processor cores)</li> <li>RAM (Memory, not a disk)</li> <li>DISK (disk space which will be consumed from server(or your laptop).</li> <li>Type of Operation system(Linux or Windows)</li> <li>Name (any human readable name)</li> </ul> <p>VM lives on you laptop and consume your resources like any other program. Turn it off when you finish work with them or delete it to free disk capacity.</p> <p></p> <p>For creation any of VMs need to use special software(program) which can control VMs and manage. </p> <p>Such type of software has name Hypervisor</p>"},{"location":"docs/Base/vagrant/#hypervisor-concept","title":"Hypervisor concept","text":"<p>Hypervior is software which can manage VM lifecycle(create, modify, delete).</p> <p>There is a list most popular Hypervisors which can be installed on laptop or server</p> Name Install on Linux Install on Windows Production Testing VirtualBox yes yes no yes Parallels yes no no yes RHEV yes no yes no KVM yes no yes* yes Hyper-V no yes yes yes Vmware yes no yes no <p>Below is diagram which shows Hypervisor role:</p> <p></p> <p>Where:</p> <ul> <li>Hardware is server or laptop with process,memory and disk(physical device)</li> <li>OS is Operation system on server/laptop like Linux/Windows/Macos</li> <li>Hypervisor is software on our Operation system</li> <li>Guest OS is Operation system on Virtual machine which is controlled by Hypervisor on our server/laptop</li> </ul>"},{"location":"docs/Base/vagrant/#parallels","title":"Parallels","text":"<p>Parallels is Hypervisor for MacOS which can be used for VM creation and management.</p> <p>This is icon of such software on your laptop</p> <p> </p> Warning <p>Do not update such preinstalled Parallels on your laptop, it will be broken, 100%.</p>"},{"location":"docs/Base/vagrant/#useful-links","title":"Useful Links","text":"<ul> <li>[Russian article - Vagrant]</li> </ul>"},{"location":"docs/Labs/editors/","title":"Lab for practice with vi editor","text":"<p>Step 1. Create a new file</p> <p>In a Linux/Macos there are several ways how to create a new file</p> <ul> <li>touch newfile.txt</li> <li>vi newfile.txt</li> </ul> <p>First command just creates ea new file</p> <p>Second command creates a new file and opens editor vi</p> <p>Step 2. Populate new file with following context</p> <pre><code>Hi, I'm working on Macos in VI editor\n</code></pre> Note <p>for start typing you need to activate INSERT mode, ESC+i</p> <p>Step 3. Save such file and close at the same time</p> Note <p>use following combination ESC + :wq ENTER</p> <p>Step 4. Read your file</p> <pre><code>cat newfile.txt\n</code></pre> Note <p>cat is Linux/Macos command to read files</p> <p>Step 5. Open you file and modify content</p> <pre><code>vi newfile.txt\n</code></pre> <p>Change content to:</p> <pre><code>Hi, I'm working second time on Macos in VI editor.\n</code></pre> <p>Step 6. Delete such file</p> <pre><code>rm newfile.txt\n</code></pre> Note <p>rm is Linux/Macos command for delete files or directories.   In some cases it asks to confirm deletion operation in terminal</p>"},{"location":"docs/Labs/parallels/","title":"Lab for VM management in Parallels","text":"<p>Step 1. Open a Parallels on Mac</p> <p></p> <p>Step 1a. (optional) Cancel update offer</p> <p>Step 1b. (optional) Close Windows7 window if it appeared and keep only Control Center window</p> <p></p> <p>There is one VM is exist on our laptop, lets shut it down</p> <p>Step 1c.(optional) Shut down existing VM with Windows 7.</p> <p></p> <p>Step 2. Create New VM</p> <p>Click on \"plus\" icon to run Creation Wizard(Installation Assistant)</p> <p></p> <p>Step 3. Choose installation from DVD or image file</p> <p></p> <p>Step 4. Installation Assistant tries to find any images (.iso files) on Laptop for your choosing</p> <p>Step 5. Choose first one with name CentOS-Stream-9-latest-x86_64-dvd1.iso</p> <p></p> Note <p>There many different Linux distributives like:  - CentOS (freeware version of RHEL)  - RHEL(Red Hat Enterprise Linux)  - Debian  - Ubuntu  - etc</p> <p>Step 6. Define new user for new Linux VM</p> <p>It will be user which can login to our VM and do some actions</p> <pre><code>User Name: user1\nPassword: password1\nVerify Password: password1\n</code></pre> <p></p> <p>Step 7. Specify name of new VM and location of file with VM</p> Note <p>Virtual Machine is a file actually and we can move it from one laptop/server ot another</p> Warning <p>Each Hypervisor has own format of VM files and almost all of them are incompatible. That means we cannot create VM in Parallels, copy such file to other server and run it in KVM Hypervisor for example.</p> <p>Dont forget to select Customize settings before installation to adjust CPU and RAM(memory) for new VM</p> <p></p> <p>Step 8. Configure VM settings(resources which will be allocated from your laptop/server to the VM)</p> <p></p> <p>Step 9. Allocate 1 CPU and and 1024 MB RAM and close such window</p> <p></p> <p>Step 10. Start VM initialization</p> <p></p> <p>Step 11. Run Linux installation</p> <p>On the appearing screen choose  by arrows buttons first option Install CentOS Stream 9 and press ENTER</p> <p></p> Note <p>Once you click on installation screen your cursor will be locked, to release it press CONTROL+OPTIONS on a keyboard</p> <p>Step 12. Set Linux settings before installation</p> <p>During this process we can choose which packages can be installed and configures various parameters for Linux Operation system like Language, user(which we specify above), network settings.</p> Note <p>Once installed you can find your VM file here /Users/your user/Parallels.</p> <p>*.pvm is Parallels file extensing which means that it is VM is created by Parallels Hypervisor.</p> <p>Step 12.1 Select language English</p> <p></p> <p>Step 12.2 Select Software packages for installation</p> <p>Click on Software Selection and Choose Minimal Install and Done</p> <p></p> <p>Step 12.3 Confirm disk for Linux installation</p> <p>Click on Installation Destination and Done</p> <p></p> <p>By default single disk is choosen and you don't need to select something. Just press Done.</p> <p>Step</p> <p>Step 12.4 Setup root(it is administrator) user</p> <p>Click on Root Password option and specify password for root user.</p> <p>Select  Allow root SSH login with password option</p> <p><pre><code>Root password: password1\nConfirm: password1\n</code></pre> </p> Note <p>Need to Press Done twice to confirm password for root user</p> <p>Step 12.5 Add user</p> <p>Click on User Creation and fill out the form</p> <pre><code>Full name: user1\nUser name: user1\nMake this user administrator: yes\nRequire apassword to use this account: yes\nPassword: password1\nConfirm password: password1\n</code></pre> <p></p> Note <p>Need to Press Done twice to confirm password for root user</p> <p>Step 13. Start Linux installation</p> <p>Click on Begin instalation</p> <p></p> <p>Wait until button Reboot System become active and Press it.</p> <p></p> <p>After that installation, VM will reboot and you will see *terminal with login page</p> Note <p>Once installed you can find your VM file here /Users//Parallels. <p>*.pvm is Parallels file extensing which means that it is VM is created by Parallels Hypervisor.</p> <p>Step 14. Login as user user1</p> <p>Use password from steps above</p> <p></p> <p></p> <p>Step 15. Get ip address of your new VM</p> <p>Linux has command ip for getting information about ip addressess across all interfaces in Operation System.</p> <p>Some servers/Laptops have more that one interface(for example one for management, second for data transfer to another servers)</p> <p>Example:</p> <p><pre><code>ip a\n</code></pre> a is argument means address. Literaly we can use</p> <pre><code>ip address - to show list of available interfaces and their ip addresses\n</code></pre> <p></p> <p>Step 16. Write down IP address of your VM.</p>"},{"location":"docs/Labs/ssh/","title":"Lab for using SSH tool","text":"<p>In this lab we will try to remotely connect to own new created VM with linux from out local laptop/server</p> <p>Step 1. Create new ssh private/public key pair</p> <p><pre><code>Name for key: demo-key\n\nOutcome: check that your current directory contains two files:\n</code></pre> ls -l </p> <p>demo-key demo-key.pub <pre><code>Step 2. Add our public key to remote VM\n\nFor remote VM we will use VM from [Lab for VM management in Parallels](https://kamelott.github.io/education/docs/Labs/parallels/)\n\nFor key, file from Step 1 of **this Lab**\n</code></pre> ssh-copy-id -i demo-key user1@ ``` Note <p>As a result of such command, the content of demo-key.pub file will to copied to remote VM in /home/user1/.ssh/authorized_keys</p> <p>Step 3. Try to connect to remote VM with using your private key</p> <p>Step 5. Log out from session:</p> <p>There are two options:</p> <ul> <li>Use Linux command exit</li> <li>Use CTRL+D to close a ssh session</li> </ul> <p>Step 4. Try to get information about ip address of remote VM with using ssh as an one command.</p>"}]}